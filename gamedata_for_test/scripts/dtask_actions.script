--dtask_actions
local sim = alife()

function storiIdChange(sobj, newSobj)
	local oldSid = get_object_story_id(sobj.id)
	unregister_story_object_by_id(sobj.id)
	return add_story_object(newSobj.id, oldSid)
end

function offlineTransfer(snpc, sobj)
	local a = sim:create(sobj:section_name(), sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id, snpc.id)
	storiIdChange(sobj, a)
	log("! has_story_item_"..tostring(a.parent_id))
	--sim:release(sobj, true)
	return a
end

function rtrue()
	log("~ACT2") 
	return true
end

function complete(dynQuest)
	dynQuest:progress('complete')
	return true
end

function take_obj(dynQuest)
	if dynQuest.purpose.online and dynQuest.executor.online then
		local cobj = level.object_by_id(dynQuest.purpose.id)
		local npc =  level.object_by_id(dynQuest.executor.id)
		cobj:transfer_item(cobj, npc)
		return true
	else
		dynQuest.purpose = offlineTransfer(dynQuest.executor, dynQuest.purpose)
	end
	
	return true
end 

function def_conder(dynQuest, lgk)
	return dynQuest.purpose.position:distance_to_sqr(dynQuest.executor.position) < 2 
end

function transfer(dynQuest)
	if dynQuest.executor.online and dynQuest.employer.online then
		level.object_by_id(dynQuest.executor.id):transfer_item(level.object_by_id(dynQuest.purpose.id), level.object_by_id(dynQuest.employer.id))
	else
		dynQuest.purpose = offlineTransfer(dynQuest.employer, dynQuest.purpose)
	end
	dynQuest:progress('complete')
	return true
end